// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product_info.proto

package ecommerce

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Product struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a4d768ec9cb4951, []int{0}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func init() {
	proto.RegisterType((*Product)(nil), "ecommerce.Product")
}

func init() {
	proto.RegisterFile("product_info.proto", fileDescriptor_9a4d768ec9cb4951)
}

var fileDescriptor_9a4d768ec9cb4951 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x4f, 0x4a, 0x03, 0x31,
	0x14, 0xc6, 0x99, 0xb1, 0x2a, 0x7d, 0x05, 0x91, 0xe7, 0x1f, 0x86, 0xb1, 0xc8, 0x30, 0xab, 0xe2,
	0x22, 0x41, 0xdd, 0x79, 0x03, 0x77, 0x52, 0xa1, 0x1b, 0x17, 0x92, 0x4e, 0xde, 0x0c, 0x81, 0x4e,
	0x12, 0xd2, 0x4c, 0x5d, 0x88, 0x1b, 0xaf, 0xe0, 0x8d, 0xbc, 0x82, 0x57, 0xf0, 0x20, 0xd2, 0x4c,
	0x46, 0xba, 0x10, 0x77, 0xc9, 0xf7, 0x7b, 0xfc, 0xbe, 0xbc, 0x00, 0x5a, 0x67, 0x64, 0x57, 0xf9,
	0x67, 0xa5, 0x6b, 0xc3, 0xac, 0x33, 0xde, 0xe0, 0x98, 0x2a, 0xd3, 0xb6, 0xe4, 0x2a, 0xca, 0x2f,
	0x1b, 0x63, 0x9a, 0x15, 0xf1, 0x00, 0x96, 0x5d, 0xcd, 0x5f, 0x9c, 0xb0, 0x96, 0xdc, 0xba, 0x1f,
	0xcd, 0xa7, 0x91, 0x0b, 0xab, 0xb8, 0xd0, 0xda, 0x78, 0xe1, 0x95, 0xd1, 0x91, 0x96, 0x04, 0x87,
	0x0f, 0xbd, 0x1e, 0x8f, 0x20, 0x55, 0x32, 0x4b, 0x8a, 0x64, 0x36, 0x9e, 0xa7, 0x4a, 0x22, 0xc2,
	0x48, 0x8b, 0x96, 0xb2, 0x34, 0x24, 0xe1, 0x8c, 0x05, 0x4c, 0x24, 0xad, 0x2b, 0xa7, 0xec, 0x56,
	0x92, 0xed, 0x05, 0xb4, 0x1b, 0xe1, 0x29, 0xec, 0x5b, 0xa7, 0x2a, 0xca, 0x46, 0x45, 0x32, 0x4b,
	0xe7, 0xfd, 0xe5, 0xe6, 0x33, 0x81, 0x49, 0xec, 0xb9, 0xd7, 0xb5, 0xc1, 0x05, 0x80, 0x90, 0x72,
	0x68, 0x46, 0xf6, 0xbb, 0x0e, 0x8b, 0x59, 0x3e, 0x65, 0xfd, 0xbb, 0xd9, 0xb0, 0x17, 0x7b, 0xf4,
	0x4e, 0xe9, 0x66, 0x21, 0x56, 0x1d, 0x95, 0xe7, 0xef, 0x5f, 0xdf, 0x1f, 0xe9, 0x71, 0x39, 0xe1,
	0x9b, 0x6b, 0x1e, 0xff, 0xe7, 0x2e, 0xb9, 0xc2, 0x27, 0x80, 0x86, 0xfc, 0xe0, 0xfd, 0xd7, 0x91,
	0xff, 0xd1, 0x5a, 0x5e, 0x04, 0xef, 0x19, 0x9e, 0xec, 0x78, 0xf9, 0xeb, 0x66, 0x3b, 0xff, 0xb6,
	0x3c, 0x08, 0x9a, 0xdb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x40, 0x40, 0x6e, 0x91, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductInfoClient is the client API for ProductInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductInfoClient interface {
	AddProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*wrapperspb.StringValue, error)
	GetProduct(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*Product, error)
}

type productInfoClient struct {
	cc grpc.ClientConnInterface
}

func NewProductInfoClient(cc grpc.ClientConnInterface) ProductInfoClient {
	return &productInfoClient{cc}
}

func (c *productInfoClient) AddProduct(ctx context.Context, in *Product, opts ...grpc.CallOption) (*wrapperspb.StringValue, error) {
	out := new(wrapperspb.StringValue)
	err := c.cc.Invoke(ctx, "/ecommerce.ProductInfo/addProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productInfoClient) GetProduct(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*Product, error) {
	out := new(Product)
	err := c.cc.Invoke(ctx, "/ecommerce.ProductInfo/getProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductInfoServer is the server API for ProductInfo service.
type ProductInfoServer interface {
	AddProduct(context.Context, *Product) (*wrapperspb.StringValue, error)
	GetProduct(context.Context, *wrapperspb.StringValue) (*Product, error)
}

// UnimplementedProductInfoServer can be embedded to have forward compatible implementations.
type UnimplementedProductInfoServer struct {
}

func (*UnimplementedProductInfoServer) AddProduct(ctx context.Context, req *Product) (*wrapperspb.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProduct not implemented")
}
func (*UnimplementedProductInfoServer) GetProduct(ctx context.Context, req *wrapperspb.StringValue) (*Product, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProduct not implemented")
}

func RegisterProductInfoServer(s *grpc.Server, srv ProductInfoServer) {
	s.RegisterService(&_ProductInfo_serviceDesc, srv)
}

func _ProductInfo_AddProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Product)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductInfoServer).AddProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ecommerce.ProductInfo/AddProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductInfoServer).AddProduct(ctx, req.(*Product))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductInfo_GetProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductInfoServer).GetProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ecommerce.ProductInfo/GetProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductInfoServer).GetProduct(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ecommerce.ProductInfo",
	HandlerType: (*ProductInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addProduct",
			Handler:    _ProductInfo_AddProduct_Handler,
		},
		{
			MethodName: "getProduct",
			Handler:    _ProductInfo_GetProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product_info.proto",
}
